name: Zoz Node Simple
on:
  push:
    tags:
      - 'prod*'
permissions:
  id-token: write
  contents: read
jobs:
  deploy:
    name: Zoz Whoop Deploy
    runs-on: ubuntu-latest    

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::407767216233:role/github-actions-role
        aws-region: us-west-2
    - name: Checkout
      uses: actions/checkout@v3
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1        
    - name: Build, tag, and push image to Amazon ECR 1
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: zoz-node
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -f ./Dockerfile.simplenode -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
    - name: Deploy to App Runner
      id: deploy-apprunner
      uses: awslabs/amazon-app-runner-deploy@main        
      env:
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
      with:
        service: zoz-apprunner-node-2
        image: ${{ steps.build-image.outputs.image }}          
        access-role-arn: arn:aws:iam::407767216233:role/service-role/AppRunnerECRAccessRole
        region: us-west-2
        cpu : 1
        memory : 2
        port: 8080
        wait-for-service-stability-seconds: 1200
        copy-env-vars: |
            PGPASSWORD
    
    - name: App Runner output
      run: echo "App runner output ${{ steps.deploy-apprunner.outputs.service-id }}" 